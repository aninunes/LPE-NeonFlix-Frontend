{"ast":null,"code":"import { getToken } from \"../seguranca/Autenticacao\";\nexport const getFilmesAPI = async () => {\n  const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/filme`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"authorization\": getToken()\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao buscar filmes');\n  }\n  const data = await response.json();\n  return data;\n};\nexport const getFilmePorIdAPI = async id => {\n  const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/filme/${id}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"authorization\": getToken()\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao buscar filme');\n  }\n  const data = await response.json();\n  return data;\n};\nexport const deleteFilmePorIdAPI = async id => {\n  const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/filme/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"authorization\": getToken()\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao deletar filme');\n  }\n  const data = await response.json();\n  return data;\n};\nexport const cadastrarFilmeAPI = async (metodo, objeto) => {\n  const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/filme`, {\n    method: metodo,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"authorization\": getToken()\n    },\n    body: JSON.stringify(objeto)\n  });\n  if (!response.ok) {\n    throw new Error('Erro ao cadastrar filme');\n  }\n  const data = await response.json();\n  return data;\n};","map":{"version":3,"names":["getToken","getFilmesAPI","response","fetch","process","env","REACT_APP_ENDERECO_API","method","headers","ok","Error","data","json","getFilmePorIdAPI","id","deleteFilmePorIdAPI","cadastrarFilmeAPI","metodo","objeto","body","JSON","stringify"],"sources":["C:/Users/anita/Music/LPE/Frontend/src/servicos/FilmeServico.jsx"],"sourcesContent":["import { getToken } from \"../seguranca/Autenticacao\";\r\n\r\nexport const getFilmesAPI = async () => {\r\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/filme`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"authorization\": getToken()\r\n        }\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error('Erro ao buscar filmes');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\nexport const getFilmePorIdAPI = async id => {\r\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/filme/${id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"authorization\": getToken()\r\n        }\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error('Erro ao buscar filme');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\nexport const deleteFilmePorIdAPI = async id => {\r\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/filme/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"authorization\": getToken()\r\n        }\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error('Erro ao deletar filme');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n\r\nexport const cadastrarFilmeAPI = async (metodo, objeto) => {\r\n    const response = await fetch(`${process.env.REACT_APP_ENDERECO_API}/filme`, {\r\n        method: metodo,\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"authorization\": getToken()\r\n        },\r\n        body: JSON.stringify(objeto)\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error('Erro ao cadastrar filme');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,2BAA2B;AAEpD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,QAAQ,EAAE;IACxEC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAER,QAAQ,CAAC;IAC9B;EACJ,CAAC,CAAC;EACF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC5C;EACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAG,MAAMC,EAAE,IAAI;EACxC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,UAAUQ,EAAE,EAAE,EAAE;IAC9EP,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAER,QAAQ,CAAC;IAC9B;EACJ,CAAC,CAAC;EACF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EAC3C;EACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC;AAED,OAAO,MAAMI,mBAAmB,GAAG,MAAMD,EAAE,IAAI;EAC3C,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,UAAUQ,EAAE,EAAE,EAAE;IAC9EP,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAER,QAAQ,CAAC;IAC9B;EACJ,CAAC,CAAC;EACF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC5C;EACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC;AAED,OAAO,MAAMK,iBAAiB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,MAAM,KAAK;EACvD,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,QAAQ,EAAE;IACxEC,MAAM,EAAEU,MAAM;IACdT,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAER,QAAQ,CAAC;IAC9B,CAAC;IACDmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,MAAM;EAC/B,CAAC,CAAC;EACF,IAAI,CAAChB,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC9C;EACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}